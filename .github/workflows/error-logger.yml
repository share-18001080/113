name: Error Logger - Nh·∫≠t K√Ω L·ªói T√≠ch L≈©y

on:
  workflow_run:
    workflows: ["*"]
    types: [completed]

permissions:
  actions: read
  contents: read

jobs:
  gom-loi-tich-luy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'failure' }}
    steps:
      - name: T·∫£i nh·∫≠t k√Ω l·ªói c≈©
        uses: actions/download-artifact@v4
        continue-on-error: true
        with:
          name: error-log-database
          path: error-db/

      - name: Kh·ªüi t·∫°o n·∫øu ch∆∞a c√≥
        run: |
          mkdir -p error-db
          
          if [ ! -f error-db/all-errors.txt ]; then
            echo "# NH·∫¨T K√ù L·ªñI BUILD FFMPEG - Repository 113" > error-db/all-errors.txt
            echo "# T·ª± ƒë·ªông ghi l·∫°i m·ªçi l·ªói build ƒë·ªÉ l√†m context cho AI debug" >> error-db/all-errors.txt
            echo "# T·∫°o l√∫c: $(date)" >> error-db/all-errors.txt
            echo "" >> error-db/all-errors.txt
          fi
          
          if [ ! -f error-db/error-stats.txt ]; then
            echo "# TH·ªêNG K√ä L·ªñI THEO PATTERN" > error-db/error-stats.txt
            echo "" >> error-db/error-stats.txt
          fi
          
          if [ ! -f error-db/build-history.txt ]; then
            echo "# L·ªäCH S·ª¨ BUILD" > error-db/build-history.txt
            echo "Format: [Ng√†y] [Workflow] [Run#] [K·∫øt qu·∫£] [Th·ªùi gian]" >> error-db/build-history.txt
            echo "" >> error-db/build-history.txt
          fi

      - name: T·∫£i log c·ªßa workflow b·ªã l·ªói
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RUN_ID=${{ github.event.workflow_run.id }}
          
          curl -L \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/${{ github.repository }}/actions/runs/${RUN_ID}/logs \
            -o current-log.zip
          
          unzip -q current-log.zip -d current-log/

      - name: Tr√≠ch xu·∫•t l·ªói v√† ghi v√†o nh·∫≠t k√Ω
        run: |
          WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          RUN_NUMBER=${{ github.event.workflow_run.run_number }}
          RUN_ID=${{ github.event.workflow_run.id }}
          CREATED_AT="${{ github.event.workflow_run.created_at }}"
          BRANCH="${{ github.event.workflow_run.head_branch }}"
          
          echo "" >> error-db/all-errors.txt
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" >> error-db/all-errors.txt
          echo "‚ùå L·ªñI BUILD #${RUN_NUMBER}" >> error-db/all-errors.txt
          echo "‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê" >> error-db/all-errors.txt
          echo "Workflow: ${WORKFLOW_NAME}" >> error-db/all-errors.txt
          echo "Run ID: ${RUN_ID}" >> error-db/all-errors.txt
          echo "Branch: ${BRANCH}" >> error-db/all-errors.txt
          echo "Th·ªùi gian: ${CREATED_AT}" >> error-db/all-errors.txt
          echo "Link: https://github.com/${{ github.repository }}/actions/runs/${RUN_ID}" >> error-db/all-errors.txt
          echo "" >> error-db/all-errors.txt
          echo "--- C√ÅC D√íNG L·ªñI QUAN TR·ªåNG ---" >> error-db/all-errors.txt
          
          grep -rh "error:" current-log/ | head -n 100 >> error-db/all-errors.txt || echo "(Kh√¥ng t√¨m th·∫•y 'error:')" >> error-db/all-errors.txt
          grep -rh "ERROR:" current-log/ | head -n 50 >> error-db/all-errors.txt || true
          grep -rh "undefined reference" current-log/ | head -n 50 >> error-db/all-errors.txt || true
          grep -rh "No such file" current-log/ | head -n 30 >> error-db/all-errors.txt || true
          grep -rh "not found" current-log/ | head -n 30 >> error-db/all-errors.txt || true
          grep -rh "failed" current-log/ | head -n 30 >> error-db/all-errors.txt || true
          
          echo "" >> error-db/all-errors.txt
          echo "--- CONTEXT XUNG QUANH L·ªñI (50 d√≤ng cu·ªëi) ---" >> error-db/all-errors.txt
          find current-log/ -name "*.txt" -exec tail -n 50 {} \; | tail -n 50 >> error-db/all-errors.txt || true
          echo "" >> error-db/all-errors.txt

      - name: C·∫≠p nh·∫≠t l·ªãch s·ª≠ build
        run: |
          WORKFLOW_NAME="${{ github.event.workflow_run.name }}"
          RUN_NUMBER=${{ github.event.workflow_run.run_number }}
          CREATED_AT="${{ github.event.workflow_run.created_at }}"
          
          echo "[$(date +'%Y-%m-%d %H:%M')] ${WORKFLOW_NAME} | Run#${RUN_NUMBER} | ‚ùå FAILED | ${CREATED_AT}" >> error-db/build-history.txt

      - name: Ph√¢n t√≠ch pattern l·ªói l·∫∑p l·∫°i
        run: |
          echo "# C·∫¨P NH·∫¨T L√öC: $(date)" > error-db/error-stats.txt
          echo "" >> error-db/error-stats.txt
          echo "## TOP L·ªñI XU·∫§T HI·ªÜN NHI·ªÄU NH·∫§T:" >> error-db/error-stats.txt
          echo "" >> error-db/error-stats.txt
          
          grep -oh "error:.*" error-db/all-errors.txt | sort | uniq -c | sort -rn | head -n 20 >> error-db/error-stats.txt || echo "Ch∆∞a c√≥ d·ªØ li·ªáu" >> error-db/error-stats.txt
          
          echo "" >> error-db/error-stats.txt
          echo "## L·ªñI 'undefined reference':" >> error-db/error-stats.txt
          grep -oh "undefined reference.*" error-db/all-errors.txt | sort | uniq -c | sort -rn | head -n 10 >> error-db/error-stats.txt || echo "Kh√¥ng c√≥" >> error-db/error-stats.txt
          
          echo "" >> error-db/error-stats.txt
          echo "## L·ªñI 'not found':" >> error-db/error-stats.txt
          grep -oh ".*not found" error-db/all-errors.txt | sort | uniq -c | sort -rn | head -n 10 >> error-db/error-stats.txt || echo "Kh√¥ng c√≥" >> error-db/error-stats.txt
          
          echo "" >> error-db/error-stats.txt
          echo "## T·ªîNG S·ªê L·∫¶N BUILD L·ªñI:" >> error-db/error-stats.txt
          FAIL_COUNT=$(grep -c "‚ùå L·ªñI BUILD" error-db/all-errors.txt || echo "0")
          echo "${FAIL_COUNT} l·∫ßn" >> error-db/error-stats.txt

      - name: T·∫°o file t√≥m t·∫Øt cho Gemini Pro
        run: |
          echo "# B√ÅO C√ÅO L·ªñI CHO GEMINI PRO DEBUG" > error-db/gemini-context.txt
          echo "" >> error-db/gemini-context.txt
          echo "## TH·ªêNG K√ä T·ªîNG QUAN" >> error-db/gemini-context.txt
          
          FAIL_COUNT=$(grep -c "‚ùå L·ªñI BUILD" error-db/all-errors.txt || echo "0")
          echo "- T·ªïng s·ªë l·∫ßn build l·ªói: ${FAIL_COUNT}" >> error-db/gemini-context.txt
          echo "- Repository: ${{ github.repository }}" >> error-db/gemini-context.txt
          echo "- C·∫≠p nh·∫≠t l·∫ßn cu·ªëi: $(date)" >> error-db/gemini-context.txt
          echo "" >> error-db/gemini-context.txt
          
          echo "## TOP 10 L·ªñI PH·ªî BI·∫æN NH·∫§T (Pattern l·∫∑p l·∫°i)" >> error-db/gemini-context.txt
          grep -oh "error:.*" error-db/all-errors.txt | sort | uniq -c | sort -rn | head -n 10 >> error-db/gemini-context.txt || echo "Ch∆∞a ƒë·ªß d·ªØ li·ªáu" >> error-db/gemini-context.txt
          
          echo "" >> error-db/gemini-context.txt
          echo "## L·ªñI C·ª¶A PHI√äN B·∫¢N G·∫¶N NH·∫§T (Chi ti·∫øt)" >> error-db/gemini-context.txt
          tail -n 200 error-db/all-errors.txt >> error-db/gemini-context.txt
          
          echo "" >> error-db/gemini-context.txt
          echo "## H∆Ø·ªöNG D·∫™N S·ª¨ D·ª§NG" >> error-db/gemini-context.txt
          echo "1. Copy to√†n b·ªô n·ªôi dung file n√†y" >> error-db/gemini-context.txt
          echo "2. Paste v√†o Gemini 2.5 Pro" >> error-db/gemini-context.txt
          echo "3. Y√™u c·∫ßu: Ph√¢n t√≠ch pattern l·ªói v√† ƒë∆∞a ra fix c·ª• th·ªÉ cho workflow YAML" >> error-db/gemini-context.txt

      - name: Hi·ªÉn th·ªã t√≥m t·∫Øt tr√™n GitHub UI
        run: |
          echo "## üìã Nh·∫≠t K√Ω L·ªói ƒê√£ C·∫≠p Nh·∫≠t" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Workflow b·ªã l·ªói:** ${{ github.event.workflow_run.name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Run s·ªë:** #${{ github.event.workflow_run.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üìä Th·ªëng k√™" >> $GITHUB_STEP_SUMMARY
          
          FAIL_COUNT=$(grep -c "‚ùå L·ªñI BUILD" error-db/all-errors.txt || echo "0")
          echo "- T·ªïng s·ªë l·∫ßn build l·ªói: **${FAIL_COUNT}**" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üî• Top 5 l·ªói ph·ªï bi·∫øn:" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          grep -oh "error:.*" error-db/all-errors.txt | sort | uniq -c | sort -rn | head -n 5 >> $GITHUB_STEP_SUMMARY || echo "Ch∆∞a ƒë·ªß d·ªØ li·ªáu" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### üì• T·∫£i nh·∫≠t k√Ω ƒë·∫ßy ƒë·ªß" >> $GITHUB_STEP_SUMMARY
          echo "Artifact: \`error-log-database\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**File quan tr·ªçng:**" >> $GITHUB_STEP_SUMMARY
          echo "- \`gemini-context.txt\` - Copy paste cho Gemini Pro" >> $GITHUB_STEP_SUMMARY
          echo "- \`all-errors.txt\` - To√†n b·ªô l·ªói chi ti·∫øt" >> $GITHUB_STEP_SUMMARY
          echo "- \`error-stats.txt\` - Th·ªëng k√™ pattern l·ªói" >> $GITHUB_STEP_SUMMARY
          echo "- \`build-history.txt\` - L·ªãch s·ª≠ build" >> $GITHUB_STEP_SUMMARY

      - name: D·ªçn d·∫πp
        run: rm -rf current-log/ current-log.zip

      - name: Upload nh·∫≠t k√Ω l·ªói
        uses: actions/upload-artifact@v4
        with:
          name: error-log-database
          path: error-db/
          retention-days: 90
          overwrite: true
